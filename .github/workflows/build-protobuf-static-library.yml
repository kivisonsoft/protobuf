name: Build and Release Protobuf Static

on:
  create:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x86, x64, armv7, arm64, mips]
        build_type: [debug, release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup protobuf
      run: |
        sudo apt-get install autoconf automake libtool curl make g++ unzip
        ./autogen.sh

        case ${{ matrix.os }} in
          ubuntu-latest)
            case ${{ matrix.arch }} in
              x86)
                ./configure --disable-shared --build=i686-pc-linux-gnu
                ;;
              x64)
                ./configure --disable-shared --build=x86_64-pc-linux-gnu
                ;;
              armv7)
                ./configure --disable-shared --build=arm-linux-gnueabi
                ;;
              arm64)
                ./configure --disable-shared --build=aarch64-linux-gnu
                ;;
              mips)
                ./configure --disable-shared --build=mips-linux-gnu
                ;;
            esac
            ;;
          macos-latest)
            case ${{ matrix.arch }} in
              x86)
                ./configure --disable-shared --build=i686-apple-darwin
                ;;
              x64)
                ./configure --disable-shared --build=x86_64-apple-darwin
                ;;
              arm64)
                ./configure --disable-shared --build=arm64-apple-darwin
                ;;
            esac
            ;;
          windows-latest)
            if [ "${{ matrix.arch }}" == "mips" ]; then
              echo "MIPS architecture is not supported on Windows."
              exit 1
            fi
            # Configure for Windows, you might need to adjust this part based on protobuf build requirements on Windows
            # For simplicity, only x86, x64, and arm64 are included here.
            # Adjust the configuration for ARM as needed.
            ./configure --disable-shared
            ;;
        esac

        make ${{ matrix.build_type }}
        sudo make install

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: protobuf-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.build_type }}.zip
        asset_name: protobuf-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.build_type }}.zip
        asset_content_type: application/zip
